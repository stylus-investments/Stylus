generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model admin {
  id         Int      @id @default(autoincrement())
  name       String
  username   String   @unique
  password   String   @unique
  root_admin Boolean  @default(false)
  created_at DateTime @default(now())
}

model snapshot {
  id            Int             @id @default(autoincrement())
  start_date    DateTime
  end_date      DateTime
  completed     Boolean         @default(false)
  created_at    DateTime        @default(now())
  updated_at    DateTime        @updatedAt
  user_snapshot user_snapshot[]
}

model user_snapshot {
  id          Int      @id @default(autoincrement())
  stake       String
  reward      String
  status      Int
  wallet      String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  user_id     String
  snapshot_id Int
  snapshot    snapshot @relation(fields: [snapshot_id], references: [id])

  @@index([snapshot_id], map: "user_snapshot_snapshot_id_fkey")
}

model user_order {
  id                    String          @id @default(uuid())
  amount                String
  price                 String
  status                String
  receipt               String
  method                String
  currency              String
  user_id               String
  user_unread_messages  Int             @default(0)
  admin_unread_messages Int             @default(0)
  package               Boolean         @default(false)
  investment_plan_id    String?
  closed                Boolean         @default(false)
  created_at            DateTime        @default(now())
  updated_at            DateTime        @updatedAt
  order_message         order_message[]
}

model user_investment_plan {
  id                  String        @id @default(uuid())
  user_id             String
  name                String
  completed           Boolean       @default(false)
  package             order_package @relation(fields: [order_package_id], references: [id])
  order_package_id    String
  payment_count       Int
  next_order_creation DateTime

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model order_package {
  id                   String                 @id @default(uuid())
  name                 String
  perks                String
  duration             Int
  monthly_payment      Int
  currency             String
  created_at           DateTime               @default(now())
  updated_at           DateTime               @updatedAt
  user_investment_plan user_investment_plan[]
}

model currency_conversion {
  id              Int    @id @default(autoincrement())
  currency        String @unique
  conversion_rate String
}

model order_message {
  id         Int        @id @default(autoincrement())
  order_id   String
  sender     String
  content    String
  is_image   Boolean
  seen       Boolean    @default(false)
  created_at DateTime   @default(now())
  user_order user_order @relation(fields: [order_id], references: [id])

  @@index([order_id], map: "order_message_order_id_fkey")
}

model user_info {
  user_id    String   @unique
  first_name String
  last_name  String
  email      String
  mobile     String
  age        String
  birth_date DateTime
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
